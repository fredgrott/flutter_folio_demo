# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
# strict lint set from Passy's lint package
include: package:lint/strict.yaml

analyzer:
  # for freezed when json serializable is used
  errors:
    invalid_annotation_target: ignore
  exclude:
    - "**/*.g.dart"
    - "build/**"
  plugins:
     - dart_code_metrics
dart_code_metrics:
  anti-patterns:
     - long-method
     - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    halstead-volume: 150
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 100
    lines-of-code: 100
    maintainability-index: 50
    number-of-methods: 10
    weight-of-class: 0.33
    technical-debt:
      threshold: 1
      todo-cost: 161
      ignore-cost: 320
      ignore-for-file-cost: 396
      as-dynamic-cost: 322
      deprecated-annotations-cost: 37
      file-nullsafety-migration-cost: 41
      unit-type: "USD"
  extends:
    - package:dart_code_metrics_presets/all.yaml
  rules:
    - arguments-ordering:
        child-last: true
    - format-comment:
        only-doc-comments: true
        ignored-patterns:
          - ^ cSpell.*  # Ignores all the comments that start with 'cSpell' (for example: '// cSpell:disable-next-line').
    - member-ordering:
        widgets-order:
          - build-method
          - init-state-method
          - did-change-dependencies-method
          - did-update-widget-method
          - dispose-method
    - missing-test-assertion:
        include-assertions:
          - verify
        include-methods:
          - customTest
    - no-equal-arguments:
        ignored-parameters:
          - height
          - width
    - prefer-conditional-expressions:
        ignore-nested: true
    - prefer-correct-identifier-length:
        exceptions: [ 'a' ]
        max-identifier-length: 30
        min-identifier-length: 4
    - prefer-correct-type-name:
        excluded: [ 'exampleExclude' ]
        min-length: 3
        max-length: 40
    - prefer-moving-to-variable:
        allowed-duplicated-chains: 3
    - prefer-static-class:
        ignore-annotations:
          - allowedAnnotation
        ignore-private: true
        ignore-names:
          - (.*)Provider
          - use(.*)
    - prefer-trailing-comma:
        break-on: 2
    - tag-name:
        var-names: [_kTag]
        strip-prefix: _
        strip-postfix: State
    - avoid-returning-widgets:
        ignored-names:
          - testFunction
        ignored-annotations:
          - allowedAnnotation
    - use-setstate-synchronously:
        methods:
          - setState
          - yourMethod
    - prefer-extracting-callbacks:
        ignored-named-arguments:
          - onPressed
          - onTap
        allowed-line-count: 3
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
    - avoid-ignoring-return-values: false
    - avoid-non-null-assertion: false
    - avoid-redundant-async: false
    - avoid-top-level-members-in-tests: false
    - prefer-commenting-analyzer-ignores: false
    - avoid-dynamic: false
    - no-magic-numbers: false
    - prefer-moving-to-variable: false
    - avoid-late-keyword: false
    - avoid-non-ascii-symbols: false
    - no-equal-arguments: false





linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
